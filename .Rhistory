stat_ellipse(data = ols_df_int, aes(x = V1, y = V2))
ols_df_int <- ellipse_mkr(mu = c(1,3), sigma = c(.75,.5))
ols_df_smallest <- ellipse_mkr(mu = c(1,3), sigma = 0.5*c(.75,.5))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_int_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_int_smallest, aes(x = V1, y = V2))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2))
constraint_df <- data.frame(beta1 = c(0,1,0,-1),
beta2 = c(1,0,-1,0))
ols_df_int <- ellipse_mkr(mu = c(1,3), sigma = c(.75,.5))
ols_df_small <- ellipse_mkr(mu = c(1,3), sigma = 0.75*c(.75,.5))
ols_df_smallest <- ellipse_mkr(mu = c(1,3), sigma = 0.5*c(.75,.5))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2))
constraint_df <- data.frame(beta1 = c(0,1,0,-1),
beta2 = c(1,0,-1,0))
ols_df_int <- ellipse_mkr(mu = c(1,3), sigma = c(.75,.5))
ols_df_small <- ellipse_mkr(mu = c(1,3), sigma = 0.5*c(.75,.5))
ols_df_smallest <- ellipse_mkr(mu = c(1,3), sigma = 0.2*c(.75,.5))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2))
library(MASS)
set.seed(89)
ellipse_mkr <- function(mu, sigma) {
n = 100
Sigma = matrix(c(sigma[1], sigma[2],sigma[2],sigma[1]), nrow=2)
theta = 180*pi/180 #Angle in radians
mu2 = c(mu[1]*cos(theta) - mu[2]*sin(theta),mu[2]*cos(theta) + mu[1]*sin(theta))
rot <-matrix(c(cos(theta),sin(theta),-sin(theta),cos(theta)),nrow=2)
ols_df <- as.data.frame(mvrnorm(n=n, mu=mu, Sigma=rot %*% Sigma %*% t(rot)))
return(ols_df)
}
constraint_df <- data.frame(beta1 = c(0,1,0,-1),
beta2 = c(1,0,-1,0))
ols_df_int <- ellipse_mkr(mu = c(1,3), sigma = 1.1*c(.75,.5))
ols_df_small <- ellipse_mkr(mu = c(1,3), sigma = 0.5*c(.75,.5))
ols_df_smallest <- ellipse_mkr(mu = c(1,3), sigma = 0.2*c(.75,.5))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2))
library(MASS)
set.seed(89)
ellipse_mkr <- function(mu, sigma) {
n = 100
Sigma = matrix(c(sigma[1], sigma[2],sigma[2],sigma[1]), nrow=2)
theta = 180*pi/180 #Angle in radians
mu2 = c(mu[1]*cos(theta) - mu[2]*sin(theta),mu[2]*cos(theta) + mu[1]*sin(theta))
rot <-matrix(c(cos(theta),sin(theta),-sin(theta),cos(theta)),nrow=2)
ols_df <- as.data.frame(mvrnorm(n=n, mu=mu, Sigma=rot %*% Sigma %*% t(rot)))
return(ols_df)
}
constraint_df <- data.frame(beta1 = c(0,1,0,-1),
beta2 = c(1,0,-1,0))
ols_df_int <- ellipse_mkr(mu = c(1,3), sigma = 1.15*c(.75,.5))
ols_df_small <- ellipse_mkr(mu = c(1,3), sigma = 0.5*c(.75,.5))
ols_df_smallest <- ellipse_mkr(mu = c(1,3), sigma = 0.2*c(.75,.5))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2)) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta))) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2)) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2)) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
?geom_text
ggplot() +
geom_abline(linetype = "dashed")
ggplot() +
geom_abline(linetype = "dashed") +
labs(x = expression(beta^"LASSO"))
ggplot() +
geom_abline(linetype = "dashed") +
labs(x = expression(hat(beta)[j]^"LASSO"))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS"))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) if (x <= 1) {0} else {0.5*x}) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS"))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) if (x <= 1) {0} else {0.5*x}) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,10)
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) if (x <= 1) {0} else {0.5*x}) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,10) +
ylim(0,10)
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x)}) +
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x)) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,10) +
ylim(0,10)
?stat_function
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x), n = 1000) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,10) +
ylim(0,10)
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x), n = 10000) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,10) +
ylim(0,10)
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x-0.5), n = 10000) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,10) +
ylim(0,10)
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x-0.5), n = 10000) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,5) +
ylim(0,5)
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed") +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x-0.5), n = 10000) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,5) +
ylim(0,5) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed", size = 1.2) +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x-0.5), n = 10000,
size = 1.2) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(-0.1,5) +
ylim(0,5) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed", size = 1.2) +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x-0.5), n = 10000,
size = 1.2) +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,5) +
ylim(0,5) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed", size = 1.2) +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x-0.5), n = 10000,
size = 1.2, color = "dodgerblue2") +
labs(x = expression(hat(beta)[j]^"LASSO"),
y = expression(hat(beta)[j]^"OLS")) +
xlim(0,5) +
ylim(0,5) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "grey30") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed", size = 1.2) +
stat_function(fun = function(x) ifelse(x < 1, 0, 0.5*x-0.5), n = 10000,
size = 1.2, color = "dodgerblue2") +
labs(x = expression(hat(beta)[j]^"OLS"),
y = expression(hat(beta)[j]^"LASSO")) +
xlim(0,3) +
ylim(0,3) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
stat_function(fun = function (x) sqrt(1-x^2)) +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
constraint_df <- circleFun(c(0,0))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
geom_path() +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
constraint_df <- circleFun(c(0,0))
ols_df_int <- ellipse_mkr(mu = c(1,3), sigma = 1.15*c(.75,.5))
ols_df_small <- ellipse_mkr(mu = c(1,3), sigma = 0.5*c(.75,.5))
ols_df_smallest <- ellipse_mkr(mu = c(1,3), sigma = 0.2*c(.75,.5))
ggplot(constraint_df, aes(x=beta1, y=beta2)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
geom_path() +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
constraint_df
ggplot(constraint_df, aes(x=x, y=y)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
geom_path() +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
constraint_df <- circleFun(c(0,0), diameter = 2)
set.seed(89)
constraint_df <- circleFun(c(0,0), diameter = 2)
ols_df_int <- ellipse_mkr(mu = c(1,3), sigma = 1.15*c(.75,.5))
ols_df_small <- ellipse_mkr(mu = c(1,3), sigma = 0.5*c(.75,.5))
ols_df_smallest <- ellipse_mkr(mu = c(1,3), sigma = 0.2*c(.75,.5))
ggplot(constraint_df, aes(x=x, y=y)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
geom_path() +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(constraint_df, aes(x=x, y=y)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
geom_path(fill = "firebrick2") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(constraint_df, aes(x=x, y=y)) +
geom_text(x = 1, y = 3, label = expression(hat(beta)), fontface = "bold", size = 6) +
geom_hline(yintercept = 0,) +
geom_vline(xintercept = 0) +
geom_polygon(fill = "firebrick2") +
stat_ellipse(data = ols_df_int, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_small, aes(x = V1, y = V2),
size = 1.2) +
stat_ellipse(data = ols_df_smallest, aes(x = V1, y = V2),
size = 1.2) +
labs(x = expression(beta[1]), y = expression(beta[2])) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed", size = 1.2) +
stat_function(fun = function(x) 0.5*x,
n = 10000,
size = 1.2, color = "orchid2") +
labs(x = expression(hat(beta)[j]^"OLS"),
y = expression(hat(beta)[j]^"LASSO")) +
xlim(0,3) +
ylim(0,3) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed", size = 1.2) +
stat_function(fun = function(x) ifelse(x < 1, 0, x-1), n = 10000,
size = 1.2, color = "dodgerblue2") +
labs(x = expression(hat(beta)[j]^"OLS"),
y = expression(hat(beta)[j]^"LASSO")) +
xlim(0,3) +
ylim(0,3) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(data.frame(x = 0)) +
geom_abline(linetype = "dashed", size = 1.2) +
stat_function(fun = function(x) ifelse(x < 1, 0, x-1), n = 10000,
size = 1.2, color = "dodgerblue2") +
labs(x = expression(hat(beta)[j]^"OLS"),
y = expression(hat(beta)[j]^"LASSO")) +
xlim(0,3) +
ylim(0,3) +
theme_minimal() +
theme(text = element_text(size = 20))
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
dgp <- data.frame(x = rnorm(100, pi, sd = 1))
bstps <- lapply(1:10, function (x) data.frame(x = sample(dgp$x, 100, replace = TRUE)))
dgp <- data.frame(x = rnorm(100, pi, sd = 1),
type = "DGP",
B = 0)
dgp <- data.frame(x = rnorm(100, pi, sd = 1),
type = "DGP",
B = 0)
bstps <- lapply(1:10, function (b) data.frame(x = sample(dgp$b, 100, replace = TRUE),
B = b,
type = "Bootstrap"))
bstps <- lapply(1:10, function (b) data.frame(x = sample(dgp$x, 100, replace = TRUE),
B = b,
type = "Bootstrap"))
bstps_df <- do.call("rbind", bstps)
library(ggplot2)
bstps_df <- rbind(do.call("rbind", bstps),
dgp)
ggplot(bstps_df, aes(x = x, color = B)) +
facet_wrap(.~type) +
geom_density()
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type) +
geom_density()
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_density()
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_density(size = 1.2)
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_density(size = 1.2, alpha = 0.7)
dgp <- data.frame(x = rnorm(100, pi, sd = 1),
type = "DGP",
B = "DGP")
bstps <- lapply(1:10, function (b) data.frame(x = sample(dgp$x, 100, replace = TRUE),
B = b,
type = "Bootstrap"))
bstps_df <- rbind(do.call("rbind", bstps),
dgp)
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_density(size = 1.2)
set.seed(89)
dgp <- data.frame(x = rnorm(100, pi, sd = 1),
type = "DGP",
B = "DGP")
bstps <- lapply(1:10, function (b) data.frame(x = sample(dgp$x, 100, replace = TRUE),
B = b,
type = "Bootstrap"))
bstps_df <- rbind(do.call("rbind", bstps),
dgp)
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_density(size = 1.2)
bstps_df$type <- factor(bastps_df$type, levels = c("DGP","Bootstrap"))
bstps_df$type <- factor(bstps_df$type, levels = c("DGP","Bootstrap"))
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_density(size = 1.2)
geom_density(size = 1.2) +
theme_minimal() +
theme(text = element_text(size = 20))
geom_density(size = 1.2) +
theme_minimal() +
theme(text = element_text(size = 20))
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_vline(xintercept = mean(bstps_df$x[bstps_df$type == "DGP"])) +
geom_density(size = 1.2) +
theme_minimal() +
theme(text = element_text(size = 20))
bstps_df$B <- factor(bstps_df$B, levels = c(1:10,"dgp"))
bstps_df$B <- factor(bstps_df$B, levels = c(1:10,"DGP"))
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_vline(xintercept = mean(bstps_df$x[bstps_df$type == "DGP"])) +
geom_density(size = 1.2) +
theme_minimal() +
theme(text = element_text(size = 20))
bstps_df <- rbind(do.call("rbind", bstps),
dgp)
bstps_df$type <- factor(bstps_df$type, levels = c("DGP","Bootstrap"))
bstps_df$B <- factor(bstps_df$B, levels = c(1:10,"DGP"))
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_vline(xintercept = mean(bstps_df$x[bstps_df$type == "DGP"])) +
geom_density(size = 1.2) +
theme_minimal() +
library(ggplot2)
library(ggplot2)
set.seed(89)
dgp <- data.frame(x = rnorm(100, pi, sd = 1),
type = "DGP",
B = "DGP")
bstps <- lapply(1:10, function (b) data.frame(x = sample(dgp$x, 100, replace = TRUE),
B = b,
type = "Bootstrap"))
bstps_df <- rbind(do.call("rbind", bstps),
dgp)
bstps_df$type <- factor(bstps_df$type, levels = c("DGP","Bootstrap"))
bstps_df$B <- factor(bstps_df$B, levels = c(1:10,"DGP"))
ggplot(bstps_df, aes(x = x, color = as.factor(B))) +
facet_wrap(.~type, ncol = 1) +
geom_vline(xintercept = mean(bstps_df$x[bstps_df$type == "DGP"])) +
geom_density(size = 1.2) +
theme_minimal() +
theme(text = element_text(size = 20))
theme(text = element_text(size = 20),
strip.text.x = element_text(size = 20, face = "bold"))
1000*4
1000/4
*20
250*20
